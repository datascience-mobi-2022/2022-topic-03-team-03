ylim = c(0,0.1))
lines(x = fraction_index, y = HeLa_RNAse_mean["SIN3A_HUMAN",], type = 'l', col = 'firebrick2')
legend(x = "topright",
legend = c("ctrl", "RNase"),
col = c('darkgreen', 'red'),
lwd = 2)
fraction_index <- c(1:25)
# Repeat the following code block for the six test proteins ctrl vs RNase and pre vs post normalization
# "Shifter" - SIN3A
par(mfrow = c(1,2))
plot(fraction_index, HeLa_Ctrl1["SIN3A_HUMAN",], type = 'l', col = 'forestgreen', # Control
xlab = "Fractions",
ylab = "Protein amount [arbitrary unit]",
ylim = c(0,3500000))
lines(x = fraction_index, y = HeLa_RNAse1["SIN3A_HUMAN",], type = 'l', col = 'firebrick2') # RNase
legend(x = "topright",                      # Position
legend = c("ctrl", "RNase"),           # Legend texts
col = c('darkgreen', 'red'),           # Line colors
lwd = 2)                               # Line width
plot(fraction_index, HeLa_Ctrl_mean["SIN3A_HUMAN",], type = 'l', col = 'forestgreen',
xlab = "Fractions",
ylab = "Protein amount",
ylim = c(0,0.1))
lines(x = fraction_index, y = HeLa_RNAse_mean["SIN3A_HUMAN",], type = 'l', col = 'firebrick2')
legend(x = "topright",
legend = c("ctrl", "RNase"),
col = c('darkgreen', 'red'),
lwd = 2)
fraction_index <- c(1:25)
# Repeat the following code block for the six test proteins ctrl vs RNase and pre vs post normalization
# Function to create comparison plot
function(protein, y_limit_pre, y_limit_post) {
par(mfrow = c(1,2))
plot(fraction_index, HeLa_Ctrl1[protein,], type = 'l', col = 'forestgreen', # Control pre
xlab = "Fractions",
ylab = "Protein amount [arbitrary unit]",
ylim = c(0,y_limit_pre))
lines(x = fraction_index, y = HeLa_RNAse1[protein,], type = 'l', col = 'firebrick2') # RNase pre
legend(x = "topright",                      # Position
legend = c("ctrl", "RNase"),           # Legend texts
col = c('darkgreen', 'red'),           # Line colors
lwd = 2)                               # Line width
plot(fraction_index, HeLa_Ctrl_mean[protein,], type = 'l', col = 'forestgreen', # Control post
xlab = "Fractions",
ylab = "Protein amount",
ylim = c(0,y_limit_post))
lines(x = fraction_index, y = HeLa_RNAse_mean[protein,], type = 'l', col = 'firebrick2') # RNase post
legend(x = "topright",
legend = c("ctrl", "RNase"),
col = c('darkgreen', 'red'),
lwd = 2)
}
fraction_index <- c(1:25)
# Repeat the following code block for the six test proteins ctrl vs RNase and pre vs post normalization
# Function to create comparison plot
compare_pre_post <- function(protein, y_limit_pre, y_limit_post) {
par(mfrow = c(1,2))
plot(fraction_index, HeLa_Ctrl1[protein,], type = 'l', col = 'forestgreen', # Control pre
xlab = "Fractions",
ylab = "Protein amount [arbitrary unit]",
ylim = c(0,y_limit_pre))
lines(x = fraction_index, y = HeLa_RNAse1[protein,], type = 'l', col = 'firebrick2') # RNase pre
legend(x = "topright",                      # Position
legend = c("ctrl", "RNase"),           # Legend texts
col = c('darkgreen', 'red'),           # Line colors
lwd = 2)                               # Line width
plot(fraction_index, HeLa_Ctrl_mean[protein,], type = 'l', col = 'forestgreen', # Control post
xlab = "Fractions",
ylab = "Protein amount",
ylim = c(0,y_limit_post))
lines(x = fraction_index, y = HeLa_RNAse_mean[protein,], type = 'l', col = 'firebrick2') # RNase post
legend(x = "topright",
legend = c("ctrl", "RNase"),
col = c('darkgreen', 'red'),
lwd = 2)
}
fraction_index <- c(1:25)
# Repeat the following code block for the six test proteins ctrl vs RNase and pre vs post normalization
# Function to create comparison plot
compare_pre_post <- function(protein, y_limit_pre, y_limit_post) {
par(mfrow = c(1,2))
plot(fraction_index, HeLa_Ctrl1[protein,], type = 'l', col = 'forestgreen', # Control pre
xlab = "Fractions",
ylab = "Protein amount [arbitrary unit]",
ylim = c(0,y_limit_pre))
lines(x = fraction_index, y = HeLa_RNAse1[protein,], type = 'l', col = 'firebrick2') # RNase pre
legend(x = "topright",                      # Position
legend = c("ctrl", "RNase"),           # Legend texts
col = c('darkgreen', 'red'),           # Line colors
lwd = 2)                               # Line width
plot(fraction_index, HeLa_Ctrl_mean[protein,], type = 'l', col = 'forestgreen', # Control post
xlab = "Fractions",
ylab = "Protein amount",
ylim = c(0,y_limit_post))
lines(x = fraction_index, y = HeLa_RNAse_mean[protein,], type = 'l', col = 'firebrick2') # RNase post
legend(x = "topright",
legend = c("ctrl", "RNase"),
col = c('darkgreen', 'red'),
lwd = 2)
}
compare_pre_post("SIN3A_HUMAN", 350000, 0.1)
fraction_index <- c(1:25)
# Repeat the following code block for the six test proteins ctrl vs RNase and pre vs post normalization
# Function to create comparison plot
compare_pre_post <- function(protein, y_limit_pre, y_limit_post) {
par(mfrow = c(1,2))
plot(fraction_index, HeLa_Ctrl1[protein,], type = 'l', col = 'forestgreen', # Control pre
xlab = "Fractions",
ylab = "Protein amount [arbitrary unit]",
ylim = c(0,y_limit_pre))
lines(x = fraction_index, y = HeLa_RNAse1[protein,], type = 'l', col = 'firebrick2') # RNase pre
legend(x = "topright",                      # Position
legend = c("ctrl", "RNase"),           # Legend texts
col = c('darkgreen', 'red'),           # Line colors
lwd = 2)                               # Line width
plot(fraction_index, HeLa_Ctrl_mean[protein,], type = 'l', col = 'forestgreen', # Control post
xlab = "Fractions",
ylab = "Protein amount",
ylim = c(0,y_limit_post))
lines(x = fraction_index, y = HeLa_RNAse_mean[protein,], type = 'l', col = 'firebrick2') # RNase post
legend(x = "topright",
legend = c("ctrl", "RNase"),
col = c('darkgreen', 'red'),
lwd = 2)
}
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1)
fraction_index <- c(1:25)
# Repeat the following code block for the six test proteins ctrl vs RNase and pre vs post normalization
# Function to create comparison plots
compare_pre_post <- function(protein, y_limit_pre, y_limit_post) {
par(mfrow = c(1,2))
plot(fraction_index, HeLa_Ctrl1[protein,], type = 'l', col = 'forestgreen', # Control pre
xlab = "Fractions",
ylab = "Protein amount [arbitrary unit]",
ylim = c(0,y_limit_pre),
main = protein + "pre-normalization")
lines(x = fraction_index, y = HeLa_RNAse1[protein,], type = 'l', col = 'firebrick2') # RNase pre
legend(x = "topright",                      # Position
legend = c("ctrl", "RNase"),           # Legend texts
col = c('darkgreen', 'red'),           # Line colors
lwd = 2)                               # Line width
plot(fraction_index, HeLa_Ctrl_mean[protein,], type = 'l', col = 'forestgreen', # Control post
xlab = "Fractions",
ylab = "Protein amount",
ylim = c(0,y_limit_post),
main = protein + "post-normalization")
lines(x = fraction_index, y = HeLa_RNAse_mean[protein,], type = 'l', col = 'firebrick2') # RNase post
legend(x = "topright",
legend = c("ctrl", "RNase"),
col = c('darkgreen', 'red'),
lwd = 2)
}
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1)
fraction_index <- c(1:25)
# Repeat the following code block for the six test proteins ctrl vs RNase and pre vs post normalization
# Function to create comparison plots
compare_pre_post <- function(protein, y_limit_pre, y_limit_post) {
par(mfrow = c(1,2))
plot(fraction_index, HeLa_Ctrl1[protein,], type = 'l', col = 'forestgreen', # Control pre
xlab = "Fractions",
ylab = "Protein amount [arbitrary unit]",
ylim = c(0,y_limit_pre),
main = paste(protein, "pre-normalization"))
lines(x = fraction_index, y = HeLa_RNAse1[protein,], type = 'l', col = 'firebrick2') # RNase pre
legend(x = "topright",                      # Position
legend = c("ctrl", "RNase"),           # Legend texts
col = c('darkgreen', 'red'),           # Line colors
lwd = 2)                               # Line width
plot(fraction_index, HeLa_Ctrl_mean[protein,], type = 'l', col = 'forestgreen', # Control post
xlab = "Fractions",
ylab = "Protein amount",
ylim = c(0,y_limit_post),
main = paste(protein, "post-normalization"))
lines(x = fraction_index, y = HeLa_RNAse_mean[protein,], type = 'l', col = 'firebrick2') # RNase post
legend(x = "topright",
legend = c("ctrl", "RNase"),
col = c('darkgreen', 'red'),
lwd = 2)
}
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1)
fraction_index <- c(1:25)
# Repeat the following code block for the six test proteins ctrl vs RNase and pre vs post normalization
# Function to create comparison plots
compare_pre_post <- function(protein, y_limit_pre, y_limit_post) {
par(mfrow = c(1,2))
plot(fraction_index, HeLa_Ctrl1[protein,], type = 'l', col = 'forestgreen', # Control pre
xlab = "Fractions",
ylab = "Protein amount [arbitrary unit]",
ylim = c(0,y_limit_pre),
main = paste(protein, "pre-normalization"))
lines(x = fraction_index, y = HeLa_RNAse1[protein,], type = 'l', col = 'firebrick2') # RNase pre
legend(x = "topright",                      # Position
legend = c("ctrl", "RNase"),           # Legend texts
col = c('darkgreen', 'red'),           # Line colors
lwd = 2)                               # Line width
plot(fraction_index, HeLa_Ctrl_mean[protein,], type = 'l', col = 'forestgreen', # Control post
xlab = "Fractions",
ylab = "Protein amount",
ylim = c(0,y_limit_post),
main = paste(protein, "post-normalization"))
lines(x = fraction_index, y = HeLa_RNAse_mean[protein,], type = 'l', col = 'firebrick2') # RNase post
legend(x = "topright",
legend = c("ctrl", "RNase"),
col = c('darkgreen', 'red'),
lwd = 2)
}
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 3500000, 0.1) #HDAC1
compare_pre_post("HDAC2_HUMAN", 3500000, 0.1) #HDAC2
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 3500000, 0.1) #ASNS
compare_pre_post("MCM2_HUMAN", 3500000, 0.1) #MCM2
compare_pre_post("MCM3_HUMAN", 3500000, 0.1) #MCM3
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 4000000, 0.1) #HDAC1
compare_pre_post("HDAC2_HUMAN", 3500000, 0.1) #HDAC2
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 3500000, 0.1) #ASNS
compare_pre_post("MCM2_HUMAN", 3500000, 0.1) #MCM2
compare_pre_post("MCM3_HUMAN", 3500000, 0.1) #MCM3
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 5000000, 0.1) #HDAC1
compare_pre_post("HDAC2_HUMAN", 3500000, 0.1) #HDAC2
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 3500000, 0.1) #ASNS
compare_pre_post("MCM2_HUMAN", 3500000, 0.1) #MCM2
compare_pre_post("MCM3_HUMAN", 3500000, 0.1) #MCM3
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 6000000, 0.1) #HDAC1
compare_pre_post("HDAC2_HUMAN", 3500000, 0.1) #HDAC2
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 3500000, 0.1) #ASNS
compare_pre_post("MCM2_HUMAN", 3500000, 0.1) #MCM2
compare_pre_post("MCM3_HUMAN", 3500000, 0.1) #MCM3
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 6000000, 0.15) #HDAC1
compare_pre_post("HDAC2_HUMAN", 3500000, 0.1) #HDAC2
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 3500000, 0.1) #ASNS
compare_pre_post("MCM2_HUMAN", 3500000, 0.1) #MCM2
compare_pre_post("MCM3_HUMAN", 3500000, 0.1) #MCM3
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 6000000, 0.11) #HDAC1
compare_pre_post("HDAC2_HUMAN", 3500000, 0.1) #HDAC2
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 3500000, 0.1) #ASNS
compare_pre_post("MCM2_HUMAN", 3500000, 0.1) #MCM2
compare_pre_post("MCM3_HUMAN", 3500000, 0.1) #MCM3
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 6000000, 0.11) #HDAC1
compare_pre_post("HDAC2_HUMAN", 6000000, 0.12) #HDAC2
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 3500000, 0.1) #ASNS
compare_pre_post("MCM2_HUMAN", 3500000, 0.1) #MCM2
compare_pre_post("MCM3_HUMAN", 3500000, 0.1) #MCM3
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 6000000, 0.11) #HDAC1
compare_pre_post("HDAC2_HUMAN", 6500000, 0.13) #HDAC2
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 3500000, 0.1) #ASNS
compare_pre_post("MCM2_HUMAN", 3500000, 0.1) #MCM2
compare_pre_post("MCM3_HUMAN", 3500000, 0.1) #MCM3
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 6000000, 0.11) #HDAC1
compare_pre_post("HDAC2_HUMAN", 6500000, 0.15) #HDAC2
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 3500000, 0.1) #ASNS
compare_pre_post("MCM2_HUMAN", 3500000, 0.1) #MCM2
compare_pre_post("MCM3_HUMAN", 3500000, 0.1) #MCM3
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 6000000, 0.11) #HDAC1
compare_pre_post("HDAC2_HUMAN", 6500000, 0.15) #HDAC2
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 2500000, 0.02) #ASNS
compare_pre_post("MCM2_HUMAN", 6000000, 0.2) #MCM2
compare_pre_post("MCM3_HUMAN", 7000000, 0.2) #MCM3
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 6000000, 0.11) #HDAC1
compare_pre_post("HDAC2_HUMAN", 6500000, 0.15) #HDAC2
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 2500000, 0.02) #ASNS
compare_pre_post("MCM2_HUMAN", 10000000, 0.3) #MCM2
compare_pre_post("MCM3_HUMAN", 10000000, 0.3) #MCM3
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 6000000, 0.11) #HDAC1
compare_pre_post("HDAC2_HUMAN", 6500000, 0.15) #HDAC2
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 2500000, 0.02) #ASNS
compare_pre_post("MCM2_HUMAN", 13000000, 0.5) #MCM2
compare_pre_post("MCM3_HUMAN", 13000000, 0.3) #MCM3
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 6000000, 0.11) #HDAC1
compare_pre_post("HDAC2_HUMAN", 6500000, 0.15) #HDAC2
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 2500000, 0.02) #ASNS
compare_pre_post("MCM2_HUMAN", 13000000, 0.5) #MCM2
compare_pre_post("MCM3_HUMAN", 17000000, 0.3) #MCM3
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 6000000, 0.11) #HDAC1
compare_pre_post("HDAC2_HUMAN", 6500000, 0.15) #HDAC2
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 2500000, 0.02) #ASNS
compare_pre_post("MCM2_HUMAN", 15000000, 0.5) #MCM2
compare_pre_post("MCM3_HUMAN", 17000000, 0.3) #MCM3
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 6000000, 0.11) #HDAC1
compare_pre_post("HDAC2_HUMAN", 6500000, 0.15) #HDAC2
compare_pre_post("AGO2_HUMAN", 6500000, 0.15) #HDAC2
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 2500000, 0.02) #ASNS
compare_pre_post("MCM2_HUMAN", 15000000, 0.5) #MCM2
compare_pre_post("MCM3_HUMAN", 17000000, 0.3) #MCM3
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 6000000, 0.11) #HDAC1
compare_pre_post("HDAC2_HUMAN", 6500000, 0.15) #HDAC2
compare_pre_post("NP3_HUMAN", 6500000, 0.15) #NP3
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 2500000, 0.02) #ASNS
compare_pre_post("MCM2_HUMAN", 15000000, 0.5) #MCM2
compare_pre_post("MCM3_HUMAN", 17000000, 0.3) #MCM3
View(HeLa_RNAse)
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 6000000, 0.11) #HDAC1
compare_pre_post("HDAC2_HUMAN", 6500000, 0.15) #HDAC2
compare_pre_post("NPM3_HUMAN", 6500000, 0.15) #NPM3
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 2500000, 0.02) #ASNS
compare_pre_post("MCM2_HUMAN", 15000000, 0.5) #MCM2
compare_pre_post("MCM3_HUMAN", 17000000, 0.3) #MCM3
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 6000000, 0.11) #HDAC1
compare_pre_post("HDAC2_HUMAN", 6500000, 0.15) #HDAC2
compare_pre_post("CASP3_HUMAN", 6500000, 0.15) #CASP3
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 2500000, 0.02) #ASNS
compare_pre_post("MCM2_HUMAN", 15000000, 0.5) #MCM2
compare_pre_post("MCM3_HUMAN", 17000000, 0.3) #MCM3
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 6000000, 0.11) #HDAC1
compare_pre_post("HDAC2_HUMAN", 6500000, 0.15) #HDAC2
compare_pre_post("CASP7_HUMAN", 6500000, 0.15) #CASP7
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 2500000, 0.02) #ASNS
compare_pre_post("MCM2_HUMAN", 15000000, 0.5) #MCM2
compare_pre_post("MCM3_HUMAN", 17000000, 0.3) #MCM3
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 6000000, 0.11) #HDAC1
compare_pre_post("HDAC2_HUMAN", 6500000, 0.15) #HDAC2
compare_pre_post("CASP7_HUMAN", 100000, 0.05) #CASP7
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 2500000, 0.02) #ASNS
compare_pre_post("MCM2_HUMAN", 15000000, 0.5) #MCM2
compare_pre_post("MCM3_HUMAN", 17000000, 0.3) #MCM3
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 6000000, 0.11) #HDAC1
compare_pre_post("HDAC2_HUMAN", 6500000, 0.15) #HDAC2
compare_pre_post("HNRNPU_HUMAN", 100000, 0.05) #HNRNPU
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 2500000, 0.02) #ASNS
compare_pre_post("MCM2_HUMAN", 15000000, 0.5) #MCM2
compare_pre_post("MCM3_HUMAN", 17000000, 0.3) #MCM3
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 6000000, 0.11) #HDAC1
compare_pre_post("HDAC2_HUMAN", 6500000, 0.15) #HDAC2
compare_pre_post("UPF3B_HUMAN", 100000, 0.05) #UPF3B
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 2500000, 0.02) #ASNS
compare_pre_post("MCM2_HUMAN", 15000000, 0.5) #MCM2
compare_pre_post("MCM3_HUMAN", 17000000, 0.3) #MCM3
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 6000000, 0.11) #HDAC1
compare_pre_post("HDAC2_HUMAN", 6500000, 0.15) #HDAC2
compare_pre_post("UPF1_HUMAN", 100000, 0.05) #UPF1
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 2500000, 0.02) #ASNS
compare_pre_post("MCM2_HUMAN", 15000000, 0.5) #MCM2
compare_pre_post("MCM3_HUMAN", 17000000, 0.3) #MCM3
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 6000000, 0.11) #HDAC1
compare_pre_post("HDAC2_HUMAN", 6500000, 0.15) #HDAC2
compare_pre_post("RFC2_HUMAN", 100000, 0.05) #UPF1
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 2500000, 0.02) #ASNS
compare_pre_post("MCM2_HUMAN", 15000000, 0.5) #MCM2
compare_pre_post("MCM3_HUMAN", 17000000, 0.3) #MCM3
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 6000000, 0.11) #HDAC1
compare_pre_post("HDAC2_HUMAN", 6500000, 0.15) #HDAC2
compare_pre_post("RFC2_HUMAN", 1000000, 0.05) #UPF1
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 2500000, 0.02) #ASNS
compare_pre_post("MCM2_HUMAN", 15000000, 0.5) #MCM2
compare_pre_post("MCM3_HUMAN", 17000000, 0.3) #MCM3
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 6000000, 0.11) #HDAC1
compare_pre_post("HDAC2_HUMAN", 6500000, 0.15) #HDAC2
compare_pre_post("RFC2_HUMAN", 5000000, 0.05) #UPF1
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 2500000, 0.02) #ASNS
compare_pre_post("MCM2_HUMAN", 15000000, 0.5) #MCM2
compare_pre_post("MCM3_HUMAN", 17000000, 0.3) #MCM3
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 6000000, 0.11) #HDAC1
compare_pre_post("HDAC2_HUMAN", 6500000, 0.15) #HDAC2
compare_pre_post("RFC2_HUMAN", 2000000, 0.05) #UPF1
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 2500000, 0.02) #ASNS
compare_pre_post("MCM2_HUMAN", 15000000, 0.5) #MCM2
compare_pre_post("MCM3_HUMAN", 17000000, 0.3) #MCM3
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 6000000, 0.11) #HDAC1
compare_pre_post("HDAC2_HUMAN", 6500000, 0.15) #HDAC2
compare_pre_post("RFC2_HUMAN", 2500000, 0.05) #UPF1
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 2500000, 0.02) #ASNS
compare_pre_post("MCM2_HUMAN", 15000000, 0.5) #MCM2
compare_pre_post("MCM3_HUMAN", 17000000, 0.3) #MCM3
# Calculate p-values per row (per protein)
Cleaned_data_shapiro <- apply(c(HeLa_Ctrl_mean, HeLa_RNAse), 1, shapiro_testing)
# Calculate p-values per row (per protein)
Cleaned_data_shapiro <- apply(HeLa_Ctrl_mean, 1, shapiro_testing)
# Create vector of p-values
shapiro_p_clean <- unlist(lapply(Cleaned_data_shapiro, function(x) {x$p.value}))
# Look at mean p-value
mean(shapiro_p_clean)
# Calculate p-values per row (per protein)
Cleaned_data_shapiro1 <- apply(HeLa_Ctrl_mean, 1, shapiro_testing)
Cleaned_data_shapiro2 <- apply(HeLa_RNAse_mean, 1, shapiro_testing)
# Create vector of p-values
shapiro_p_clean1 <- unlist(lapply(Cleaned_data_shapiro1, function(x) {x$p.value}))
shapiro_p_clean2 <- unlist(lapply(Cleaned_data_shapiro2, function(x) {x$p.value}))
# Look at mean p-value
mean(shapiro_p_clean1)
mean(shapiro_p_clean2)
# Plot first ten proteins
apply(HeLa_Ctrl_cleaned[1:10,], 1, qqplot_line)
# Plot first ten proteins
apply(HeLa_Ctrl_mean[1:10,], 1, qqplot_line)
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 6000000, 0.11) #HDAC1
compare_pre_post("HDAC2_HUMAN", 6500000, 0.15) #HDAC2
compare_pre_post("RFC2_HUMAN", 2500000, 0.05) #UPF1
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 2500000, 0.02) #ASNS
compare_pre_post("MCM2_HUMAN", 15000000, 0.5) #MCM2
compare_pre_post("MCM3_HUMAN", 17000000, 0.3) #MCM3
fraction_index <- c(1:25)
# Repeat the following code block for the six test proteins ctrl vs RNase and pre vs post normalization
# Function to create comparison plots
compare_pre_post <- function(protein, y_limit_pre, y_limit_post) {
par(mfrow = c(1,2))
plot(fraction_index, HeLa_Ctrl1[protein,], type = 'l', col = 'forestgreen', # Control pre
xlab = "Fractions",
ylab = "Protein amount [arbitrary unit]",
ylim = c(0,y_limit_pre),
main = paste(protein, "pre-normalization"))
lines(x = fraction_index, y = HeLa_RNAse1[protein,], type = 'l', col = 'firebrick2') # RNase pre
legend(x = "topright",                      # Position
legend = c("ctrl", "RNase"),           # Legend texts
col = c('darkgreen', 'red'),           # Line colors
lwd = 2)                               # Line width
plot(fraction_index, HeLa_Ctrl_mean[protein,], type = 'l', col = 'forestgreen', # Control post
xlab = "Fractions",
ylab = "Protein amount [%]",
ylim = c(0,y_limit_post),
main = paste(protein, "post-normalization"))
lines(x = fraction_index, y = HeLa_RNAse_mean[protein,], type = 'l', col = 'firebrick2') # RNase post
legend(x = "topright",
legend = c("ctrl", "RNase"),
col = c('darkgreen', 'red'),
lwd = 2)
}
# Shifters
compare_pre_post("SIN3A_HUMAN", 3500000, 0.1) #SIN3A
compare_pre_post("HDAC1_HUMAN", 6000000, 0.11) #HDAC1
compare_pre_post("HDAC2_HUMAN", 6500000, 0.15) #HDAC2
compare_pre_post("RFC2_HUMAN", 2500000, 0.05) #UPF1
# Non-Shifters
compare_pre_post("ASNS_HUMAN", 2500000, 0.02) #ASNS
compare_pre_post("MCM2_HUMAN", 15000000, 0.5) #MCM2
compare_pre_post("MCM3_HUMAN", 17000000, 0.3) #MCM3
